name: Build SilentScreenshots (Rootless + Roothide)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        scheme: [rootless, roothide]
    
    name: Build ${{ matrix.scheme }}
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache Theos
      uses: actions/cache@v3
      with:
        path: ~/theos
        key: ${{ runner.os }}-theos-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-theos-

    - name: Setup Theos
      run: |
        if [ ! -d ~/theos ]; then
          echo "Installing Theos..."
          git clone --recursive https://github.com/theos/theos.git ~/theos
        fi
        
    - name: Setup iOS SDKs
      run: |
        export THEOS=~/theos
        if [ ! -d "$THEOS/sdks/iPhoneOS16.5.sdk" ]; then
          echo "Downloading iOS SDKs..."
          curl -LO https://github.com/theos/sdks/archive/master.zip
          unzip -q master.zip
          mkdir -p $THEOS/sdks
          mv sdks-master/* $THEOS/sdks/
          rm master.zip
        fi
        ls -la $THEOS/sdks/

    - name: Install ldid
      run: brew install ldid

    - name: Build ${{ matrix.scheme }} Package
      run: |
        export THEOS=~/theos
        make clean
        make package THEOS_PACKAGE_SCHEME=${{ matrix.scheme }} FINALPACKAGE=1

    - name: Rename Package
      run: |
        mkdir -p output
        PACKAGE_NAME=$(ls packages/*.deb | head -n 1)
        cp "$PACKAGE_NAME" output/SilentScreenshots-${{ matrix.scheme }}.deb

    - name: Upload ${{ matrix.scheme }} Artifact
      uses: actions/upload-artifact@v4
      with:
        name: SilentScreenshots-${{ matrix.scheme }}
        path: output/SilentScreenshots-${{ matrix.scheme }}.deb
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Rootless Artifact
      uses: actions/download-artifact@v4
      with:
        name: SilentScreenshots-rootless
        path: release/

    - name: Download Roothide Artifact
      uses: actions/download-artifact@v4
      with:
        name: SilentScreenshots-roothide
        path: release/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release/*.deb
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
